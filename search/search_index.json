{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Ultimate Isometric Toolkit A lightweight editor extension for Unity to create isometric games using 2d sprites. Features lightweight, at just a handful of core scripts We won't bloat your project folder! per frame depth sorting physics support using Unity's built-in 3D physics engine full integration into the Unity Editor Using this asset should look and feel like it was always there to begin with. custom sprite support Use whatever sprites you seem fit to express the vision for your game. support for various orthographic projections (isometric, dimetric, military, etc. ) and of course full source code access.","title":"Introduction"},{"location":"#the-ultimate-isometric-toolkit","text":"A lightweight editor extension for Unity to create isometric games using 2d sprites.","title":"The Ultimate Isometric Toolkit"},{"location":"#features","text":"lightweight, at just a handful of core scripts We won't bloat your project folder! per frame depth sorting physics support using Unity's built-in 3D physics engine full integration into the Unity Editor Using this asset should look and feel like it was always there to begin with. custom sprite support Use whatever sprites you seem fit to express the vision for your game. support for various orthographic projections (isometric, dimetric, military, etc. ) and of course full source code access.","title":"Features"},{"location":"Manual/FAQ/","text":"Frequently Asked Questions Can I use custom isometric sprites? Yes. If you are looking for custom sprites Kenney has published tons of public domain assets and been a great support for the indie community. Which target platforms can I use with this asset? As far as we have tested all of Unity's target platforms are compatible. However the target platform must support GPU instancing (i.e.WebGL 2.0, OpenGL es 3.0+ or DirectX 11+). To read more on this have a look at the Instancing section. How many sprites can I use in a scene? We unfortunately cannot give a reasonable answer here, because this depends on many other factors. We have tested more than 1000 sprites on mid-tier mobile devices, as well as more than 10,000 sprites on desktops. Can I combine 3d objects with 2d sprites in my scene? Unfortunately not. You would most definitely experience sorting artifacts in your scene. Any unanswered questions left? Feel free to contact us via email \ud83d\udce7 .","title":"FAQs"},{"location":"Manual/FAQ/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"Manual/FAQ/#can-i-use-custom-isometric-sprites","text":"Yes. If you are looking for custom sprites Kenney has published tons of public domain assets and been a great support for the indie community.","title":"Can I use custom isometric sprites?"},{"location":"Manual/FAQ/#which-target-platforms-can-i-use-with-this-asset","text":"As far as we have tested all of Unity's target platforms are compatible. However the target platform must support GPU instancing (i.e.WebGL 2.0, OpenGL es 3.0+ or DirectX 11+). To read more on this have a look at the Instancing section.","title":"Which target platforms can I use with this asset?"},{"location":"Manual/FAQ/#how-many-sprites-can-i-use-in-a-scene","text":"We unfortunately cannot give a reasonable answer here, because this depends on many other factors. We have tested more than 1000 sprites on mid-tier mobile devices, as well as more than 10,000 sprites on desktops.","title":"How many sprites can I use in a scene?"},{"location":"Manual/FAQ/#can-i-combine-3d-objects-with-2d-sprites-in-my-scene","text":"Unfortunately not. You would most definitely experience sorting artifacts in your scene. Any unanswered questions left? Feel free to contact us via email \ud83d\udce7 .","title":"Can I combine 3d objects with 2d sprites in my scene?"},{"location":"Manual/GettingStarted/","text":"Getting Started Welcome to this Getting Started guide. We will walk you through the basics on how to use this asset. Task Create an empty 2d project in Unity and import the Ultimate Isometric Toolkit from the asset store. Adding a new Object Task Add a new sprite to your scene. Sprites can be found under Assets/UltimateIsometricToolkit/Art/ . Isometric Shader All that is required to set up your sprites for this toolkit is to use a custom shader. Task On the SpriteRenderer component replace the Sprites-Default material with the IsometricInstancingMaterial that can be found under Assets/UltimateIsometricToolkit/Materials/ and confirm the Projection is set to Isometric in the material settings. The Enable GPU Instancing flag should be checked as well. You may duplicate the material, create multiple different ones, etc. Just make sure that the IsometricInstancingUnlit shader is used to render your sprites. Isometric Scene View You will notice a slight rotation in the sprite. Go to Tools/UIT/Toggle SceneView or press Ctrl+G (Command on Mac) to switch to an isometric perspective in the SceneView. Press it again to return to the 3d perspective. Switching to the isometric perspective will automatically align the main camera and editor SceneView camera properly. An isometric perspective in the SceneView is indicated via the top right Scene Gizmo . Info Scene view rotations in isometric perspective are disabled, indicated by the lock in the top right corner Projection Although this asset is called the Ultimate Isometric Toolkit it allows to use other non-isometric projections. You can select the projection under Tools/UIT/Projection/ . The correct projection depends solely on the sprites you use. This asset comes with a set of sprites in isometric perspective. You will know you chose the right projection, if the edges of your sprite align with the grid in the SceneView. This setting is important when using custom sprites. You can now add new sprites to your scene and start with your level design. Check out kenney's website for custom, public domain isometric sprites. Most of the sprites offered through his website use a dimetric projection.","title":"Getting Started"},{"location":"Manual/GettingStarted/#getting-started","text":"Welcome to this Getting Started guide. We will walk you through the basics on how to use this asset. Task Create an empty 2d project in Unity and import the Ultimate Isometric Toolkit from the asset store.","title":"Getting Started"},{"location":"Manual/GettingStarted/#adding-a-new-object","text":"Task Add a new sprite to your scene. Sprites can be found under Assets/UltimateIsometricToolkit/Art/ .","title":"Adding a new Object"},{"location":"Manual/GettingStarted/#isometric-shader","text":"All that is required to set up your sprites for this toolkit is to use a custom shader. Task On the SpriteRenderer component replace the Sprites-Default material with the IsometricInstancingMaterial that can be found under Assets/UltimateIsometricToolkit/Materials/ and confirm the Projection is set to Isometric in the material settings. The Enable GPU Instancing flag should be checked as well. You may duplicate the material, create multiple different ones, etc. Just make sure that the IsometricInstancingUnlit shader is used to render your sprites.","title":"Isometric Shader"},{"location":"Manual/GettingStarted/#isometric-scene-view","text":"You will notice a slight rotation in the sprite. Go to Tools/UIT/Toggle SceneView or press Ctrl+G (Command on Mac) to switch to an isometric perspective in the SceneView. Press it again to return to the 3d perspective. Switching to the isometric perspective will automatically align the main camera and editor SceneView camera properly. An isometric perspective in the SceneView is indicated via the top right Scene Gizmo . Info Scene view rotations in isometric perspective are disabled, indicated by the lock in the top right corner","title":"Isometric Scene View"},{"location":"Manual/GettingStarted/#projection","text":"Although this asset is called the Ultimate Isometric Toolkit it allows to use other non-isometric projections. You can select the projection under Tools/UIT/Projection/ . The correct projection depends solely on the sprites you use. This asset comes with a set of sprites in isometric perspective. You will know you chose the right projection, if the edges of your sprite align with the grid in the SceneView. This setting is important when using custom sprites. You can now add new sprites to your scene and start with your level design. Check out kenney's website for custom, public domain isometric sprites. Most of the sprites offered through his website use a dimetric projection.","title":"Projection"},{"location":"Manual/Instancing/","text":"Instancing Unlit Shader We are using a custom shader to offload as much work as possible to the gpu rather than the cpu to create the 3d isometric effect. Instancing Sprites are rotated towards the camera in such a way that viewed from a certain angle by the camera they appear to be 3d objects. That rotation must happen individually on each sprite around its center position. While we could have simply set the Transform.rotation on each GameObject that would have also effected any physics colliders attached. So to disrupt your workflow as little as possible and stick to standard Unity components we perform the rotation in our custom shader. Unity optimizes rendering performance using a technique called dynamic batching . Batching sprites unfortunately loses any information about a sprite's center position and we therefore cannot rotate the sprite around its center anymore. So to perform our rotation and still profit from Unity build in rendering optimization we use instancing . GPU Instancing however is not available on older devices. Desktops, modern browsers and most mobile devices today support GPU instancing. As of May 7th, 2019 just under 80% of Android devices support the required OpenGL es 3.0 standard or higher [1] as well as all devices running iOS 7 and higher [2] . Summary WebGL 2.0, OpenGL es 3.0+ or DirectX11+ is required on your target platform to use all features of this asset. close to 80% of Android devices, Apple devices running iOS 7+, modern browser and pretty much all desktops support one of the required standards.","title":"Isometric Shader"},{"location":"Manual/Instancing/#instancing-unlit-shader","text":"We are using a custom shader to offload as much work as possible to the gpu rather than the cpu to create the 3d isometric effect.","title":"Instancing Unlit Shader"},{"location":"Manual/Instancing/#instancing","text":"Sprites are rotated towards the camera in such a way that viewed from a certain angle by the camera they appear to be 3d objects. That rotation must happen individually on each sprite around its center position. While we could have simply set the Transform.rotation on each GameObject that would have also effected any physics colliders attached. So to disrupt your workflow as little as possible and stick to standard Unity components we perform the rotation in our custom shader. Unity optimizes rendering performance using a technique called dynamic batching . Batching sprites unfortunately loses any information about a sprite's center position and we therefore cannot rotate the sprite around its center anymore. So to perform our rotation and still profit from Unity build in rendering optimization we use instancing . GPU Instancing however is not available on older devices. Desktops, modern browsers and most mobile devices today support GPU instancing. As of May 7th, 2019 just under 80% of Android devices support the required OpenGL es 3.0 standard or higher [1] as well as all devices running iOS 7 and higher [2] . Summary WebGL 2.0, OpenGL es 3.0+ or DirectX11+ is required on your target platform to use all features of this asset. close to 80% of Android devices, Apple devices running iOS 7+, modern browser and pretty much all desktops support one of the required standards.","title":"Instancing"},{"location":"Manual/Physics/","text":"Physics This asset utilizes Unity's built-in 3D physics. You can add the regular Rigidbody Collider components to your GameObject. Rigidbody When adding the Rigidbody component make sure to check the freeze rotation checkboxes in the inspector view. You may also set these values from script 1 2 3 4 5 public void fooBar () { var rigidbody = gameObject . GetComponent Rigidbody (); rigidbody . freezeRotation = true ; } for more information visit the official Unity documentation Colliders You can add any of the Unity 3D colliders to your GameObject. When a collider component is added Unity will set its size to match the sprite's bounds which most likely will be incorrect. Make sure to set the colliders size to the desired volume.","title":"Physics"},{"location":"Manual/Physics/#physics","text":"This asset utilizes Unity's built-in 3D physics. You can add the regular Rigidbody Collider components to your GameObject.","title":"Physics"},{"location":"Manual/Physics/#rigidbody","text":"When adding the Rigidbody component make sure to check the freeze rotation checkboxes in the inspector view. You may also set these values from script 1 2 3 4 5 public void fooBar () { var rigidbody = gameObject . GetComponent Rigidbody (); rigidbody . freezeRotation = true ; } for more information visit the official Unity documentation","title":"Rigidbody"},{"location":"Manual/Physics/#colliders","text":"You can add any of the Unity 3D colliders to your GameObject. When a collider component is added Unity will set its size to match the sprite's bounds which most likely will be incorrect. Make sure to set the colliders size to the desired volume.","title":"Colliders"},{"location":"Manual/SnappingTool/","text":"Snapping Tool The Snapping Tool is an utility tool that comes with the toolkit. The Snapping Tool will help when setting up your scene. The tool can be found under Tools/Snapping Tool or press Ctrl+L (Command on Mac). You can find the source code under Assets/UltimateIsometricToolkit/SnappingTool . Although it is not recommend you may delete that folder and remove the tool from your project, the toolkit does not depend on it. Snap Vector The tool will snap the current selection in the hierarchy window to the closest increment of that vector. Auto Snap When enabled will snap all Transform components in the current hierarchy window selection automatically. Snap selection When pressed will snap all Transform components currently selected in the hierarchy window.","title":"Snapping Tool"},{"location":"Manual/SnappingTool/#snapping-tool","text":"The Snapping Tool is an utility tool that comes with the toolkit. The Snapping Tool will help when setting up your scene. The tool can be found under Tools/Snapping Tool or press Ctrl+L (Command on Mac). You can find the source code under Assets/UltimateIsometricToolkit/SnappingTool . Although it is not recommend you may delete that folder and remove the tool from your project, the toolkit does not depend on it.","title":"Snapping Tool"},{"location":"Manual/SnappingTool/#snap-vector","text":"The tool will snap the current selection in the hierarchy window to the closest increment of that vector.","title":"Snap Vector"},{"location":"Manual/SnappingTool/#auto-snap","text":"When enabled will snap all Transform components in the current hierarchy window selection automatically.","title":"Auto Snap"},{"location":"Manual/SnappingTool/#snap-selection","text":"When pressed will snap all Transform components currently selected in the hierarchy window.","title":"Snap selection"}]}